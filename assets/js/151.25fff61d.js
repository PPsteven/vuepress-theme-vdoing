(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{698:function(t,a,s){"use strict";s.r(a);var r=s(24),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("回溯法的算法思维能帮助我们解决很多复杂的问题，通过递归 + 回溯可以帮助我们将问题拆分成更简单的子问题，使得我们有能力在碰到一些复杂的问题的时候去解决。")]),t._v(" "),s("p",[t._v("本节的知识点很大程度上参考了 "),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/XlV41qpWYeO0PEjMLHJ0Gw",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇总结带你彻底搞透回溯算法！"),s("OutboundLink")],1),t._v(" ，总结了各类回溯的问题。")]),t._v(" "),s("h2",{attrs:{id:"什么是回溯（backtrack）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是回溯（backtrack）"}},[t._v("#")]),t._v(" 什么是回溯（Backtrack）")]),t._v(" "),s("p",[t._v("**回溯法（backtrack）**是优先搜索的一种特殊情况，又称为试探法。回溯法的核心是回溯，是记录节点状态的深度搜索。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[修改当前节点状态]→[递归子节点]\n[修改当前节点状态]→[递归子节点]→[回改当前节点状态] # 回溯法加入了节点状态的修改\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"搜索效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索效率"}},[t._v("#")]),t._v(" 搜索效率")]),t._v(" "),s("p",[t._v("回溯法就是纯暴力的穷举搜索算法，时间复杂度一般为 "),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"O"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"("}})],1),s("mjx-mi",{staticClass:"mjx-i"},[s("mjx-c",{attrs:{c:"N"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:"!"}})],1),s("mjx-mo",{staticClass:"mjx-n"},[s("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),s("p",[t._v("虽然回溯法是暴力循环的一种，但是它能解决一些多重嵌套解决不了的代码。")]),t._v(" "),s("p",[t._v("回溯法遍历的过程就是决策树遍历的过程，为了提升效率，一般配上树的剪枝。")]),t._v(" "),s("h2",{attrs:{id:"模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板"}},[t._v("#")]),t._v(" 模板")]),t._v(" "),s("div",{staticClass:"language-c++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("void backtracking(参数) {\n    if (终止条件) {\n        存放结果;\n        return;\n    }\n\n    for (选择：本层集合中元素（树中节点孩子的数量就是集合的大小）) {\n        处理节点;\n        backtracking(路径，选择列表); // 递归\n        回溯，撤销处理结果\n    }\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"适用问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用问题"}},[t._v("#")]),t._v(" 适用问题")]),t._v(" "),s("p",[t._v("回溯法的经典问题有：")]),t._v(" "),s("p",[s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-msubsup",[s("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[s("mjx-c",{attrs:{c:"A"}})],1),s("mjx-script",{staticStyle:{"vertical-align":"-0.247em"}},[s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"k"}})],1),s("mjx-spacer",{staticStyle:{"margin-top":"0.29em"}}),s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"n"}})],1)],1)],1)],1)],1)],1),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("问题分类")]),t._v(" "),s("th",[t._v("LeetCode题目问题")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("排列问题："),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-msubsup",[s("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[s("mjx-c",{attrs:{c:"A"}})],1),s("mjx-script",{staticStyle:{"vertical-align":"-0.247em"}},[s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"k"}})],1),s("mjx-spacer",{staticStyle:{"margin-top":"0.29em"}}),s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"n"}})],1)],1)],1)],1)],1)],1),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/pages/5abfa6/"}},[t._v("46. 全排列(Medium)")]),t._v(" "),s("br"),s("RouterLink",{attrs:{to:"/pages/e3e50f/"}},[t._v("47. 全排列 II(Medium)")])],1)]),t._v(" "),s("tr",[s("td",[t._v("组合问题： "),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[s("mjx-math",{staticClass:" MJX-TEX"},[s("mjx-msubsup",[s("mjx-mi",{staticClass:"mjx-i",attrs:{noIC:"true"}},[s("mjx-c",{attrs:{c:"C"}})],1),s("mjx-script",{staticStyle:{"vertical-align":"-0.247em"}},[s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"k"}})],1),s("mjx-spacer",{staticStyle:{"margin-top":"0.29em"}}),s("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[s("mjx-c",{attrs:{c:"n"}})],1)],1)],1)],1)],1)],1),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/pages/d99a0a/"}},[t._v("77. 组合(Medium)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/46ccdc/"}},[t._v("216. 组合总和 III(Medium)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/e617a4/"}},[t._v("39. 组合总和")]),s("br"),s("RouterLink",{attrs:{to:"/pages/ebb06d/"}},[t._v("40. 组合总和 II")]),s("br"),s("RouterLink",{attrs:{to:"/pages/6fc9ff/"}},[t._v("17. 电话号码的字母组合(Medium)")])],1)]),t._v(" "),s("tr",[s("td",[t._v("切割问题")]),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/pages/882f12/"}},[t._v("131. 分割回文串(Medium)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/2b7435/"}},[t._v("93. 复原IP")])],1)]),t._v(" "),s("tr",[s("td",[t._v("子集问题")]),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/pages/d86336/"}},[t._v("78. 子集(Medium)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/a7c436/"}},[t._v("90. 子集 II(Medium)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/ec9c0c/"}},[t._v("491. 递增子序列")])],1)]),t._v(" "),s("tr",[s("td",[t._v("棋盘问题")]),t._v(" "),s("td",[s("RouterLink",{attrs:{to:"/pages/cad0b4/"}},[t._v("51. N皇后(hard)")]),s("br"),s("RouterLink",{attrs:{to:"/pages/a1420e/"}},[t._v("37. 解数独(Hard)")])],1)])])]),t._v(" "),s("h2",{attrs:{id:"参考教程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考教程"}},[t._v("#")]),t._v(" 参考教程")]),t._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/XlV41qpWYeO0PEjMLHJ0Gw",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇总结带你彻底搞透回溯算法！"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://greyireland.gitbook.io/algorithm-pattern/suan-fa-si-wei/backtrack",target:"_blank",rel:"noopener noreferrer"}},[t._v("回溯法"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=e.exports}}]);