(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{601:function(a,s,t){"use strict";t.r(s);var e=t(24),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("最近在实习的过程中，需要将现有的服务上云，使用到了容器化的操作。需要自己制作Dockerfile文件，完成部署。鉴于对于docker技术的不熟练，用了几天时间好好把这个知识梳理了一下。")]),a._v(" "),t("p",[a._v("安装和基础命令详见上一篇文章  "),t("a",{attrs:{href:"https://ppsteven.github.io/2019/11/21/Docker%E5%AE%89%E8%A3%85%E5%8F%8A%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Docker安装及基础命令"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("P.S. 这篇博客又切换回了next 主题，主要的原因是这篇文章中一些代码与Butterfly主题有所冲突，所以又改用兼容性比较好的hexo。今天发现原来WordPress是用php写的，作为一个php程序员肯定要搞一把，之后有时间再研究一下。")]),a._v(" "),t("h2",{attrs:{id:"docker-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像"}},[a._v("#")]),a._v(" docker 镜像")]),a._v(" "),t("h3",{attrs:{id:"拉取镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像"}},[a._v("#")]),a._v(" 拉取镜像")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker pull alpine\n$ docker pull registry.hub.docker.com/alpine:latest \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("指定默认的仓库和版本号")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM_118_62_centos ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker pull alpine")]),a._v("\nUsing default tag: latest\nlatest: Pulling from library/alpine\ne6b0cf9c0882: Pull complete \nDigest: sha256:2171658620155679240babee0a7714f6509fae66898db422ad803b951257db78\nStatus: Downloaded newer image "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" alpine:latest\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h3",{attrs:{id:"列出镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像"}},[a._v("#")]),a._v(" 列出镜像")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker images\n$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"给镜像加tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给镜像加tag"}},[a._v("#")]),a._v(" 给镜像加tag")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker tag alpine "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" 起到了链接的作用\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"查看镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看镜像"}},[a._v("#")]),a._v(" 查看镜像")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker inspect  IMAGE "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 返回json 格式")]),a._v("\n$ docker inspect  -f "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"DockerVersion"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("  IMAGE "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 以GO 模范返回格式化的信息")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"搜索镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索镜像"}},[a._v("#")]),a._v(" 搜索镜像")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker search IMAGE # 搜索镜像\ndocker search --filter=starts=4 IMAGE # 返回收藏超过4的镜像\ndocker search --filter=is-official=true IMAGE # 返回官方镜像\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"移除镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#移除镜像"}},[a._v("#")]),a._v(" 移除镜像")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker rmi IMAGE "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除镜像")]),a._v("\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" IMAGE "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除镜像")]),a._v("\ndocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" ubuntu:latest "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除指定tag 的镜像")]),a._v("\n-f --force "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制删除")]),a._v("\n\ndocker image prune\n  -a, --all             Remove all unused images, not just dangling ones （临时镜像）\n      --filter filter   Provide filter values "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("e.g. "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'until=<timestamp>'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -f, --force           Do not prompt "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" confirmation\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("h3",{attrs:{id:"创建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建镜像"}},[a._v("#")]),a._v(" 创建镜像")]),a._v(" "),t("blockquote",[t("p",[a._v("commit import build 三个子命令")])]),a._v(" "),t("h4",{attrs:{id:"commit-基于现有容器创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit-基于现有容器创建"}},[a._v("#")]),a._v(" commit 基于现有容器创建")]),a._v(" "),t("p",[a._v("docker run -it alpine /bash/sh")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# add a new file to this container ")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM_118_62_centos ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -it alpine /bin/sh  ")]),a._v("\n/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# touch text")]),a._v("\n/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# exit")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v('docker [container] commit -m "add a new file" -a "johnjhwang"  CONTAINER')]),a._v(" "),t("blockquote",[t("p",[a._v("注：方括号中的 container 是可以省略不写的。这里指出是说明commit 这个命令是 容器相关的命令\n比较建议写全，比如rm 在image 和 container 中都有，避免歧义")])]),a._v(" "),t("p",[a._v("-m: 表示 Comment  -a: 表示 Author\n由于是添加了一个文件，所以镜像的 IAMGE ID 发生了变化")]),a._v(" "),t("p",[a._v("当我们查看新的镜像的时候，能看到我们后续追加的信息")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('[root@VM_118_62_centos ~]# docker inspect 764a657de081\n[\n    {\n        "Id": "sha256:764a657de08117c11b3af9720efe2310386fa99074802ad13f68973081972819",\n        "Parent": "sha256:cc0abc535e36a7ede71978ba2bbd8159b8a5420b91f2fbc520cdf5f673640a34",\n        "Comment": "add a  new file ",\n       ......\n        "Author": "johnjhwang",\n       ......\n      }\n]\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br")])]),t("h4",{attrs:{id:"基于dockerfile创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于dockerfile创建"}},[a._v("#")]),a._v(" 基于Dockerfile创建")]),a._v(" "),t("p",[a._v("首先，创建一个文件Dockerfile")]),a._v(" "),t("blockquote",[t("p",[a._v("文件名必须是Dockerfile")])]),a._v(" "),t("p",[a._v("编辑Dockerfile")]),a._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" ununtu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("latest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("LABEL")]),a._v(" version="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'1.0'")]),a._v(" maintainer="),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'johnjhwang@tencent.com'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" apt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("get update &&\\\n    apt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("get install "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("y python3 \\\n    apt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("get clean\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" build -t python:3 ."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("小数点:这是上下文环境为当前目录"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("p",[a._v("python 是镜像名，3是版本号\n注意，最后有一个点，代表的是上下文环境(当前目录)")])]),a._v(" "),t("h4",{attrs:{id:"基于本地模板导入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基于本地模板导入"}},[a._v("#")]),a._v(" 基于本地模板导入")]),a._v(" "),t("p",[a._v("// TO DO")]),a._v(" "),t("h3",{attrs:{id:"存出和载入镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存出和载入镜像"}},[a._v("#")]),a._v(" 存出和载入镜像")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker [image] save -o ubuntu_18.04.tar ubuntu:18.04 # 本地会出现ubuntu_18.04.tar 文件\ndocker [image] load -i ubuntu_18.04.tar # 导入本地的文件，之后查看镜像库，发现出现了该镜像\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("这里我们可以用更加简便的写法")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker save alpine > alpine.tar\ndocker load alpine < alpine.tar\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"上传镜像-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上传镜像-push"}},[a._v("#")]),a._v(" 上传镜像 push")]),a._v(" "),t("p",[a._v("// TO DO")]),a._v(" "),t("h2",{attrs:{id:"docker-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器"}},[a._v("#")]),a._v(" docker 容器")]),a._v(" "),t("h3",{attrs:{id:"新建容器-启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建容器-启动容器"}},[a._v("#")]),a._v(" 新建容器&&启动容器")]),a._v(" "),t("blockquote",[t("p",[a._v("create、start、run")])]),a._v(" "),t("h4",{attrs:{id:"docker-create-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-create-start"}},[a._v("#")]),a._v(" docker create/start")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("container"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" create -it alpine "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 用create创建的容器处于停止状态 Created ，加-it 使用的是默认的sh")]),a._v("\n\ndocker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("container"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" start CONTAINER "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行后的容器状态转为 Up")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("查看状态")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM_118_62_centos ~/desktop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker start 77a32260848")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM_118_62_centos ~/desktop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker ps")]),a._v("\nCONTAINER ID   IMAGE  COMMAND  CREATED   STATUS   PORTS   NAMES\n77a32260848e     alpine  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/sh"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" minutes ago  Up "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" seconds       naughty_lamport\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("还有一个更加方便的启动方式，等价于 先执行create 后执行 start")]),a._v(" "),t("h4",{attrs:{id:"docker-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-run"}},[a._v("#")]),a._v(" docker run")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("container"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" run -it alpine /bin/sh\n-t, --tty                            Allocate a pseudo-TTY 分配一个伪终端\n -i, --interactive                    Keep STDIN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" even "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" not attached  标准输入保持打开\n -d, --detach                         Run container "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" background and print container ID\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"暂停终止容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#暂停终止容器"}},[a._v("#")]),a._v(" 暂停终止容器")]),a._v(" "),t("h4",{attrs:{id:"暂停-恢复容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#暂停-恢复容器"}},[a._v("#")]),a._v(" 暂停/恢复容器")]),a._v(" "),t("blockquote",[t("p",[a._v("状态变为：  Up  (Paused)")])]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("container"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" pause/unpause CONTAINER\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h4",{attrs:{id:"终止-启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#终止-启动容器"}},[a._v("#")]),a._v(" 终止/启动容器")]),a._v(" "),t("blockquote",[t("p",[a._v("stop、kill、运行结束会使容器状态变为： Exited")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker [container] stop/start CONTAINER\n   -t, --time int   Seconds to wait for stop before killing it (default 10)\n\ndocker [container] kill  CONTAINER\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("stop 是主动向容器发送 SIGTERM 信号，等待一段时候后，再发送SIGKILL信号来终止容器。默认10\nkill 是直接发送SIGKILL信号去终止容器。")]),a._v(" "),t("p",[a._v("有一种情况，当容器运行结束后，状态也会变为Exited")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@VM_118_62_centos ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker attach test")]),a._v("\n/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ps")]),a._v("\nPID   "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("     TIME  COMMAND\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" root      "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":00 /bin/sh\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" root      "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(":00 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# exit  // 退出后容器会终止")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("可以看到容器中只有 /bin/sh 命令运行，此时使用 exit 或者 ctrl+d 退出容器，该容器会终止")]),a._v(" "),t("h3",{attrs:{id:"清除容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除容器"}},[a._v("#")]),a._v(" 清除容器")]),a._v(" "),t("h4",{attrs:{id:"prune"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prune"}},[a._v("#")]),a._v(" prune")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker container prune  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Remove all stopped containers")]),a._v("\n  -f, --force           Do not prompt "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" confirmation\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h4",{attrs:{id:"rm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[a._v("#")]),a._v(" rm")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CONTAINER ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Remove one or more containers")]),a._v("\n  -f, --force     Force the removal of a running container "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("uses SIGKILL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -l, --link      Remove the specified "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("link")]),a._v("\n  -v, --volumes   Remove the volumes associated with the container\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"重启容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重启容器"}},[a._v("#")]),a._v(" 重启容器")]),a._v(" "),t("blockquote",[t("p",[a._v("先停止容器后重启容器")])]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker restart CONTAINER\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"进入容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[a._v("#")]),a._v(" 进入容器")]),a._v(" "),t("h4",{attrs:{id:"attach"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#attach"}},[a._v("#")]),a._v(" attach")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker attach CONTAINER\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h4",{attrs:{id:"exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[a._v("#")]),a._v(" exec")]),a._v(" "),t("blockquote",[t("p",[a._v("exec 相较于 attach 的优势是可以在运行的容器内执行任意命令\nRun a command in a running container")])]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it  CONTAINER /bin/sh\n  --detach-keys string   Override the key sequence "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" detaching a container\n                        // 重载退出容器的方法,默认是ctrl+q\n  -e, --env list             Set environment variables\n  -u, --user string          Username or "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("UID")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("format: "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("uid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("group"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("gid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -w, --workdir string       Working directory inside the container\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h3",{attrs:{id:"导入-导出容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入-导出容器"}},[a._v("#")]),a._v(" 导入/导出容器")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker [container] export -o test.tar test \ndocker [image] import  test.tar test01/test02:v1.0\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("blockquote",[t("p",[a._v("注意: docker export 是 container 下的方法\ndocker import 是 image 下的方法，不要以为import 后导入到的容器库。")])]),a._v(" "),t("p",[a._v("可以看到 docker [image] save  和 dokcer [image] load 是一对。docker [container] export 和 docker [image] import 是一对。但是 load 和 import 同样都是导入到 镜像库，区别在什么地方?")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("docker save images_name")]),a._v("：将一个镜像导出为文件，再使用"),t("code",[a._v("docker load")]),a._v("命令将文件导入为一个镜像，会保存该镜像的的所有历史记录。比"),t("code",[a._v("docker export")]),a._v("命令导出的文件大，很好理解，因为会保存镜像的所有历史记录。")]),a._v(" "),t("li",[t("code",[a._v("docker export container_id")]),a._v("：将一个容器导出为文件，再使用"),t("code",[a._v("docker import")]),a._v("命令将容器导入成为一个新的镜像，但是相比"),t("code",[a._v("docker save")]),a._v("命令，容器文件会丢失所有元数据和历史记录，仅保存容器当时的状态，相当于虚拟机快照。")])]),a._v(" "),t("h3",{attrs:{id:"查看容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看容器"}},[a._v("#")]),a._v(" 查看容器")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker [container] inspect CONTAINRER\ndocker [container] top CONTAINER  # 显示docker 内运行的进程\t\ndocker [container] stats CONTAINER # 显示docker的状态，CPU，内存，存储，网络等实时监控\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"其他容器命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他容器命令"}},[a._v("#")]),a._v(" * 其他容器命令")]),a._v(" "),t("blockquote",[t("p",[a._v("制作Dockerfile所需掌握的命令")])]),a._v(" "),t("h4",{attrs:{id:"docker-cp-复制文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-cp-复制文件"}},[a._v("#")]),a._v(" docker cp 复制文件")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("Usage:  docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OPTIONS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" CONTAINER:SRC_PATH DEST_PATH"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("-\n        docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OPTIONS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" SRC_PATH"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("- CONTAINER:DEST_PATH\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# FROM 左 TO 右")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[t("code",[a._v("docker [container] cp data test:/temp")])]),a._v(" "),t("p",[a._v("这是将本地路径下的 data 复制到 test 容器的/temp 路径下，注意只是复制文件内容，不没有包含文件夹。")]),a._v(" "),t("p",[t("code",[a._v("docker [container] cp data test:/temp/data")])]),a._v(" "),t("p",[a._v("这样才是把data文件夹移到了目标容器的文件夹下")]),a._v(" "),t("h3",{attrs:{id:"docker-container-命令大全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-container-命令大全"}},[a._v("#")]),a._v(" docker container 命令大全")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("  attach      Attach local standard input, output, and error streams to a running container\n  commit      Create a new image from a container's changes\n  cp          Copy files/folders between a container and the local filesystem\n  create      Create a new container\n  diff        Inspect changes to files or directories on a container's filesystem\n  exec        Run a command in a running container\n  export      Export a container's filesystem as a tar archive\n  inspect     Display detailed information on one or more containers\n  kill        Kill one or more running containers\n  logs        Fetch the logs of a container\n  ls          List containers\n  pause       Pause all processes within one or more containers\n  port        List port mappings or a specific mapping for the container\n  prune       Remove all stopped containers\n  rename      Rename a container\n  restart     Restart one or more containers\n  rm          Remove one or more containers\n  run         Run a command in a new container\n  start       Start one or more stopped containers\n  stats       Display a live stream of container(s) resource usage statistics\n  stop        Stop one or more running containers\n  top         Display the running processes of a container\n  unpause     Unpause all processes within one or more containers\n  update      Update configuration of one or more containers\n  wait        Block until one or more containers stop, then print their exit codes\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br"),t("span",{staticClass:"line-number"},[a._v("23")]),t("br"),t("span",{staticClass:"line-number"},[a._v("24")]),t("br"),t("span",{staticClass:"line-number"},[a._v("25")]),t("br")])]),t("h2",{attrs:{id:"docker-容器卷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器卷"}},[a._v("#")]),a._v(" docker 容器卷")]),a._v(" "),t("p",[a._v("本章不再详述命令细节，只关注于常用命令")]),a._v(" "),t("p",[a._v("容器中对数据进行持久化的操作，需要借助数据管理操作。")]),a._v(" "),t("p",[a._v("一般有两种管理方式:")]),a._v(" "),t("ul",[t("li",[a._v("Data Volumes")]),a._v(" "),t("li",[a._v("Data Volume Containers")])]),a._v(" "),t("h3",{attrs:{id:"数据卷-data-volumes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷-data-volumes"}},[a._v("#")]),a._v(" 数据卷(Data Volumes)")]),a._v(" "),t("p",[a._v("创建一个本地数据卷")]),a._v(" "),t("p",[a._v("docker volume create -d local --name haha")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("  -d, --driver string   Specify volume driver name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("default "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"local"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n  --name 重命名\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("docker volumn create 创建完成的数据卷是在 /var/lib/docker/volumes 下的，可以通过 ls （查看） inspect(详细信息) prune 和 rm 去做进一步的操作。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nDRIVER              VOLUME NAME\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v("               haha\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("这里mac需要注意，因为在mac上用docker会在mac上启动一个虚拟机运行docker，因此volume创建的directory并不在你的machine上，而是在虚拟机中。")]),a._v(" "),t("h4",{attrs:{id:"mac用户如何查看数据卷地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac用户如何查看数据卷地址"}},[a._v("#")]),a._v(" mac用户如何查看数据卷地址")]),a._v(" "),t("p",[a._v("如何进入mac上的虚拟机的办法请参考:"),t("a",{attrs:{href:"https://www.jianshu.com/p/1baeabdd0e27",target:"_blank",rel:"noopener noreferrer"}},[a._v("这篇教程"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("具体的做法是执行："),t("code",[a._v("screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty")])]),a._v(" "),t("p",[a._v("然后查看"),t("code",[a._v("/var/lib/docker/volumes")]),a._v("里面的容器")]),a._v(" "),t("h4",{attrs:{id:"数据卷的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷的类型"}},[a._v("#")]),a._v(" 数据卷的类型")]),a._v(" "),t("ul",[t("li",[a._v("volume : 普通数据卷，映射到 /var/lib/docker/volumes下")]),a._v(" "),t("li",[a._v("bind: 绑定数据卷，是自己制定的目录")]),a._v(" "),t("li",[a._v("tmpfs: 临时数据卷，只存在于内存中，目前没有使用过")])]),a._v(" "),t("p",[a._v("docker run -d --name test --mount type=bind,source=/mydata,destination=/opt/mydata CONTAINER COMMAND")]),a._v(" "),t("p",[a._v("这句话是绑定当前目录下的mydata文件夹至docker容器下的/opt/mydata文件夹")]),a._v(" "),t("p",[a._v("还有一个简洁的方式 -v")]),a._v(" "),t("p",[a._v("docker run -d --name test -v /mydata:/opt/mydata CONTAINER COMMAND")]),a._v(" "),t("h3",{attrs:{id:"数据容器-data-volume-containers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据容器-data-volume-containers"}},[a._v("#")]),a._v(" 数据容器(Data Volume Containers)")]),a._v(" "),t("p",[a._v("创建一个数据卷容器，起别名 dbtest，并挂载 "),t("code",[a._v("~/Desktop/dbfile")]),a._v(" 到当前容器")]),a._v(" "),t("p",[a._v("docker run -it --name dbtest -v ~/Desktop/dbfile:/dbfile alpine:latest")]),a._v(" "),t("p",[a._v("然后，可以在其他容器中使用 --volumes-from 挂载dbtest 中的数据卷")]),a._v(" "),t("p",[a._v("docker run -it --name db1 --volumes-from dbtest alpine\ndocker run -it --name db2 --volumes-from dbtest alpine")]),a._v(" "),t("h3",{attrs:{id:"数据卷高级用法：迁移数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷高级用法：迁移数据"}},[a._v("#")]),a._v(" 数据卷高级用法：迁移数据")]),a._v(" "),t("p",[a._v("数据的迁移有两步构成：备份+迁移")]),a._v(" "),t("p",[a._v("首先我们使用了上面建立好的 dbtest 数据卷容器，该容器和 ~/Desktop/dbfile 绑定，其中包含了我们需要保存的重要的数据。")]),a._v(" "),t("p",[t("strong",[a._v("备份")])]),a._v(" "),t("p",[a._v("docker run --volumes-from dbtest -v $(pwd):/backup --name worker alpine tar cvf /backup/backup.tar /dbfile")]),a._v(" "),t("p",[a._v("这里我们把绑定的本地和容器内的/backup绑定，所以我们用压缩方法，把dbfile 内的数据打包放入了/backup文件夹中，直观的来说，在当前目录下会看到backup.tar 文件。")]),a._v(" "),t("p",[t("strong",[a._v("迁移")])]),a._v(" "),t("p",[a._v("先创建一个新的数据卷容器dbtest2")]),a._v(" "),t("p",[a._v("docker run -v  ~/Desktop/dbfile2:/dbfile --name dbtest2  alpine")]),a._v(" "),t("p",[a._v("创建新容器，挂载dbtest2的容器，并使用untar解压放在/backup/backup.tar 文件")]),a._v(" "),t("p",[a._v("docker run --volumes-from dbtest2 -v $(pwd):/backup --name worker2 ubuntu tar xvf  /backup/backup.tar")]),a._v(" "),t("p",[a._v("docker")]),a._v(" "),t("h2",{attrs:{id:"端口映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#端口映射"}},[a._v("#")]),a._v(" 端口映射")]),a._v(" "),t("p",[a._v("启动一个web服务")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker run -d -P straining/webapp python app.py  // 随机映射端口，49000~49900到容器内部端口\ndocker run -d -p 5000:5000 training/webapp python app.py// HostPort:ContainerPort\ndocker run -d -p 127.0.0.1:5000:5000 training/webapp python app.py// IP:HostPort:ContainerPort\ndocker run -d -p 127.0.0.1::5000 training/webapp python app.py // 自动分配一个端口\ndocker run -d -p 127.0.0.1::5000/udp training/webapp python app.py // 制定UDP\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("稍后我们可以看到映射结果（下面是举例）")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:32768->5000/tcp \n0.0.0.0:3306->3306/tcp\n127.0.0.1:32768->5000/udp\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h3",{attrs:{id:"容器互联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器互联"}},[a._v("#")]),a._v(" 容器互联")]),a._v(" "),t("p",[a._v("--link name:alias\nname:连接的容器 alias 容器的别名")]),a._v(" "),t("p",[a._v("容器间的互联是一个比较重要的知识点，后续会写一篇博客完善")]),a._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/Cherry-Linux/p/8025777.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("docker load与docker import"),t("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);