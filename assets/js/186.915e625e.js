(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{743:function(s,a,e){"use strict";e.r(a);var n=e(24),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"pine-script-学习笔记-基础语法篇（一）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pine-script-学习笔记-基础语法篇（一）"}},[s._v("#")]),s._v(" Pine Script 学习笔记——基础语法篇（一）")]),s._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),e("p",[s._v("量化交易平台 "),e("a",{attrs:{href:"https://www.tradingview.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("TrendingView "),e("OutboundLink")],1),s._v(" 是一个支持多种资产的投资平台，很多人在上面分享对于股票，外汇，数据货币等资产的投资观点，难得的是在上面能找到很多人的交易策略。")]),s._v(" "),e("p",[s._v("TrendingView 使用的是自己开发的Pine 语言作为脚本，这一点和MT4 开发的mql4 很像。用户可以自己编写脚本和策略，并与其他人分享。Pine 直观给我的印象比Mql4 更加简单，更加关注于策略本身，而不是编程技巧。")]),s._v(" "),e("p",[s._v("此外，Pine语言编辑器没有那么强大的debug 功能，这对于一开始上手练习来说，不是那么方便。不过它一直在更新，发展的很快。")]),s._v(" "),e("p",[s._v("TrendingView 对接了很多经纪商，使得它支持的交易品种很丰富，而且它的图表功能很强大。")]),s._v(" "),e("p",[s._v("下面记录一下自己学习Pine 脚本的一些基础的笔记，权当备忘。主要内容都参考自Pine 的脚本文档")]),s._v(" "),e("h2",{attrs:{id:"脚本结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚本结构"}},[s._v("#")]),s._v(" 脚本结构")]),s._v(" "),e("p",[s._v("指明用的Pine 脚本版本")]),s._v(" "),e("div",{staticClass:"language-pine line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//@version=4  \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Pine 可以分为study脚本 和 strategy 脚本（指标&策略）\nstudy 脚本必须包含 plot,plotshape,barcolor,line.new  等输出\nstrategy 脚本包含 strategy.* 即交易函数")]),s._v(" "),e("h2",{attrs:{id:"换行-line-wrapping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#换行-line-wrapping"}},[s._v("#")]),s._v(" 换行 Line wrapping")]),s._v(" "),e("div",{staticClass:"language-Pine line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//例子1 换行需要空格\na = open+\n      high+\n        low\n// 例子2 换行中不能有注释\na = open+\n       high // 此处加注释会出问题\n// 例子3 函数内换行，空行必须要超过一个Tab（或者4个空格）\nlabel.new(bar_index, na, yloc=yloc.abovebar, text=t,\n     color=hist ? color.green : color.red)\n// 这里空格必须超过4个\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("算术： + - * / %")]),s._v(" "),e("blockquote",[e("p",[s._v("1/2 = 0\n1/2.0 = 0.5")])])]),s._v(" "),e("li",[e("p",[s._v("比较:  ==  !=")])]),s._v(" "),e("li",[e("p",[s._v("逻辑: not and or")])]),s._v(" "),e("li",[e("p",[s._v("三元运算符：")]),s._v(" "),e("ul",[e("li",[s._v("condition ? result1 : result2")]),s._v(" "),e("li",[s._v("iff(condition, result1, result2)")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("有房？嫁:有车？: 嫁:帅？嫁: 不嫁\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("[]  运算符(History reference operator)\nclose 代表最新的价格，close[1]代表了历史价格。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("close = close[0] //显示的是最新的收盘价\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("除此之外，Pine脚本里面还有一个变量 bar_index，记录着bar的数目，编号自左向右，从0开始。bar_index = (bar数量)N-1。")]),s._v(" "),e("ul",[e("li",[s._v("[ ]  为什么运行close[bar_index-1] ≠ close[0] ?\n而close[bar_index-1] 会出错")])])])]),s._v(" "),e("h2",{attrs:{id:"函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),e("p",[s._v("Pine 脚本中包含了大量的自建函数，用户还可以自定义函数、")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("单行函数")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("f(x,y) => x+y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Pine Script 的函数不支持**"),e("u",[s._v("递归")]),s._v("**")]),s._v(" "),e("p",[s._v("即，不允许在函数中再次调用自己本身")])]),s._v(" "),e("li",[e("p",[s._v("多行函数")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("geom_average(x, y) =>\n    a = x*x\n    b = y*y\n    sqrt(a + b)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("blockquote",[e("ul",[e("li",[s._v("Pine Script 需要（一个Tab 或者4空格，TrendingView 会自动用4个空格来替换掉Tab）来划定函数的范围")]),s._v(" "),e("li",[s._v("最后一行的表达式或 变量作为函数的输出结果")])])])]),s._v(" "),e("li",[e("p",[s._v("输出>=2")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("fun(x,y) =>\n\t a = x+y\n   b = x-y\n   retrun [a,b]\n// 调用函数\n[a,b] =fun(3,2)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"函数的注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数的注意事项"}},[s._v("#")]),s._v(" 函数的注意事项")]),s._v(" "),e("p",[s._v("当在函数块中使用函数或者历史数据信息的时候要注意。因为所使用的历史信息是每一次连续调用生成的。")]),s._v(" "),e("p",[s._v("如果函数并不是在每一根柱线上都调用，那么数据生成就会出现错误。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("例1")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 定义两个函数f1,f2\nf1(a) => a[1]\nf2() => close[1]\n// 说明下列用法的实际意义\nf1(close) 等价于 close[2]\nf2() 等价于 close[1]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])])]),s._v(" "),e("div",{attrs:{alig:"“center”"}},[e("img",{attrs:{src:"https://www.tradingview.com/pine-script-docs/en/v4/_images/Function_historical_context_1.png"}})]),s._v(" "),e("p",[s._v("f1 传入的close 序列，需要在第一次调用后才能生成，所以f1 的 价格信息实际上比f2 晚一天")]),s._v(" "),e("h2",{attrs:{id:"变量声明-语句statement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量声明-语句statement"}},[s._v("#")]),s._v(" 变量声明&语句statement")]),s._v(" "),e("h3",{attrs:{id:"var"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[s._v("#")]),s._v(" var")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Pine 语言中变量定义的方式有两种： = 和 var")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("a = 1 // a为整形\nfloat a = 1 // a为浮点型\nvar a = 0\nvar int a = 0\nb = na //出错\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("变量定义的时候，需要指明变量的类型(或者 等式右侧表达式能指明类型亦可)")]),s._v(" "),e("p",[s._v("na 没有特定的类型，所以赋值时会出错")])]),s._v(" "),e("li",[e("p",[s._v("var 关键词")]),s._v(" "),e("p",[s._v("var 是用于分配和一次性初始化变量的关键词。")]),s._v(" "),e("p",[s._v("不含var 关键词的变量在每次数据更新的时候都会覆盖变量的值。使用了var 关键词的变量，在数据更新中，可以“保持状态”。\n举例")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//@version=4\nstudy("Var keyword example")\nvar a = close\nvar b = 0.0\nvar c = 0.0\nvar green_bars_count = 0\nif close > open\n\tvar x = close\n\tb := x\n\tgreen_bars_count := green_bars_count + 1\n\tif green_bars_count >= 10\n\t\tvar y = close\n\t\tc := y\nplot(a)\nplot(b)\nplot(c)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("变量 'a' 保持系列中每个柱线的第一根柱线的收盘价。")]),s._v(" "),e("p",[s._v("变量 'b'保持系列中第一个“绿色”价格棒的收盘价。")]),s._v(" "),e("p",[s._v("变量 'c'保持系列中第十个“绿色”条的收盘价。")]),s._v(" "),e("p",[s._v("即a,b,c 都是一个常数。")]),s._v(" "),e("p",[s._v("去除var 的话，a,b,c 会随着价格变化而变化")])])]),s._v(" "),e("h3",{attrs:{id:"if-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-语句"}},[s._v("#")]),s._v(" if 语句")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// This code compiles\nx = if close > open\n    close\nelse\n    open\n// This code doesn\'t compile\nx = if close > open\n    close\nelse\n    "open"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v('需要注意的是，与python不同，Pine要求，then 和 else语句返回的值的类型是相同的。在上面的第二个例子中，close 和 "open" 一个是float Series，另一个是string，不同类型的话，编译会出错。')]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  x = if close > open\n    close\n// If current close > current open, then x = close.\n// Otherwise the x = na.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v('if 语句中可以忽略else，但是系统会默认赋值（na,false,""）')]),s._v(" "),e("h3",{attrs:{id:"for-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#for-语句"}},[s._v("#")]),s._v(" for 语句")]),s._v(" "),e("div",{staticClass:"language-Pine line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("for i = 1 to length-1\n     sum := sum + price[i]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"执行模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行模型"}},[s._v("#")]),s._v(" 执行模型")]),s._v(" "),e("p",[s._v("Pine代码是根据价格信息计算的。但是价格信息并不是完整加载的，用户可以一直向左滑动图表，直到最早的一根柱子（Pro 用户可以在图表上加载10000左右，免费用户可以加载5000根柱子）")]),s._v(" "),e("h3",{attrs:{id:"实时数据的计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实时数据的计算"}},[s._v("#")]),s._v(" 实时数据的计算")]),s._v(" "),e("p",[s._v("Pine指标计算实时数据的时候和计算历史数据略有不同，因为实时数据会有addtional commit(?)和rollback action(?)")]),s._v(" "),e("p",[s._v("在实时数据的处理过程中，柱线的每一次变动都会引起Pine 指标的计算")]),s._v(" "),e("ul",[e("li",[s._v("rollback : 在每一根柱线更新时发生")]),s._v(" "),e("li",[s._v("commit : 在每一根柱线关闭时发生")])]),s._v(" "),e("p",[s._v("对于判断柱线的状态，Pine中有一系列的自建函数 barstate.* 来显示当前柱线的状态。")])])}),[],!1,null,null,null);a.default=t.exports}}]);